import yt_dlp
import webvtt
import re
import os
import sys

from revChatGPT.revChatGPT import Chatbot

def get_summary(captions, output="summary"):
    # For the config please go here:
    # https://github.com/acheong08/ChatGPT/wiki/Setup
    config = {
        "session_token": """eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..5A-Zgv6cxb4MeE8s.mC_QuI7rb-k00vSSzQSpO0L-NuaekQikp4p9aZ6Bbt5tzQc-nMbVoDTEj44XXUP4Ms--NYC3enxSIeJ6hceTqJLF9SbAKjgQ_CTHzg_zrEYoxovOJr0qKYLtaluAyuMsiL_1A82P1JZEmlCuuBY--58i3iAVqM2k6hdT3JGrVn6v8XYlWz3U_4sG1P56lVOqu4dntNLpJfI4l7AkRbHpie57y8TzBVxr4DoAdj1rolR6LPcEm_QhiTep5b07abq351JkpW6zCd9mNeHb4s6iO1XBuZQRO4xl0Hxoe8IAg9EPa9PGhMyypqj14TVquegCyz3g6JXl3_cM2IKGhfs66FVQV2EVhkWMmYkOz7m6AzZjk0FVY1P79fngQ8vy--IlccPxnXl8VBCSODmmmqXnWY2IeeDa4sVd1mM4ZEgIrcL8lCd41FGsZu1x0aTHw63WlKKQBycuMUi9rFFdJhZicR4IsgxtKOk82WRiZfjRGx_rzUn72jyJkkygjYotQBhejFuPzLemdA_c1ViGJvo2nqTrk8HdxJRQxXxdaGU1w6RgOdXG03YRW55sWOT5hn3bhHSWOSDI9qte8g59m4HUHMUPHKYisYoprgfIIIuErnOYNaNE67R7Cr3wF9GbK8Yck5AmfQtOmbv0mbDM2vpwi22oz8LX5Z16TVtTle4zFDtMi7fs2JXmjh112XBuSB3p5SDoY71y_xOWK0yq34YPFDhA2Q4l0GZvkE5utf9cdgpTBqrY3ZluoAPrivcnmHkf_m33VVBkh8XKWHfkAuWKS--yGj7lToyE2P-YujwpaIxix1OiEqhWswNkfY45iFHlPyyQGkbUCwzIkNDlZ0YQD_EI6OzcmAoantFIxRGqk6PqqvYQx2IQeZ_mlgj9TuYdcrztQWP0Y4k5WrGCycFAaHZLlbT_WsLx_iCAzsU6CVo0PC6mIXcZUAGPZ0bmJ-gc7Nl_MbJxYYq8Avqg3-pcquZtPPlXQr26c6XLcr-JntI-XHHkmrwC2rPCPwlFksB1TBWIZGt9xzKCGmGHIQ04nNVYMZsWgNrTHj4qMdxcsfvqKWvRM9RnRy9juc-sP6wCY1cA8zg9ilQuUH_W75tqLFczwpc3esV0KpC_v4Cp4SMP-yYbJrpEE2VThyqRQuHsKlnu6pG9c9LvhiC5ZdY6SNU6TDkwL3rTkOer7itXheGxm4eQCjpeviaaWpiLafEQJ67A0ugFARq_mhYpv7ih6ENBKWnL-RkKQS3c67Jt2L1COcanrVoBN4BhABImuFC9foGJm9_oBlpYTNox_uvvh5XfNfSNsJ3MrGq0pxXWjR9FPL9bCUkEdHc0ElEuKih-VhqF6NDhu-i_D3e8saRi3jaE8b2N0fopy-b7k3cKkFTL-US0rXR7APFwBkUvwaHcw8A2g4Cuj2aTmxNy3LBUsBKoJizTfiRVekZ6LFsnhOlDFVL__U-kS3qqYqOpzTpujDnvQ0l4LJYN39n5xc8PijRPKDn3Rf5pXNgkA4u-mD5RXlx_qM5wO1Lza5lPV21xRu_RKipYldyPpjmjqgvv5faGHvrB13XZLjTNkehHt3CPTZVqRwdxXdUCOgW4pL0Z3P8-2MYo-MCj_Hhf2JBJ6VR9HnoNk2gnoyE9e2tHSehVW1uKGIee5rXZMEfxIbdftUYmi9t9f7Vy9A9-L2z9dCUgtsSubaWlHA2RmF0O-vIr6eXLM7nUdO7knzlKVXlwOWOH4CHd51Ki2ISeOcUaCYY-U-tkoDZq1LMn50kNqyYFqIlHspdlQIiTwtU1FJ4sqvZfeuGIRWX1_5Q_p_Bl_LxOVUSH2KAxUwHX8VjgBV4RLkgmeR09LriotIc2OHG_TZ22-heNaEeoDN_-M7aYEk32kOs20c8kt8rWZEzHfWNIErCy22d50Gw3uCuJmSuTvMT13mvib7CRPkwJZTd5klAvnsv_Qm8KVUFrcOp429xU9AvqpYO7oQn6uYcaT1EEudb_J60j_qJJnXkjWc31j4zMshiwOpMqEz3SAT-nKeRHnEIHF_VT5qccqYsMDLHzKZ6vFWjo9YzxVr4lv6LLeGH_7Cr4prj0QeAr48aDmoznb50YH1Hzou8sjZNjj-_S6fQeACmkGSkaKAPyNDo11YLUIDF3fHNN4dIRGHnF5-HUddb7Fw8V8zzH4nrSZwXsrSzVMAcxSgwp7XUm-SpopZLzvxEeDkN4gczQF7itvRj_QYRwDXq8Y1ZtTze9lvxJX_xGUJhiY3QQHVq4o-5bYOOMvcl5gQa_UwrO7OBoGTijIfEXvYK7iClmrPOwwbUi9fxhgCGLQlYx4IpoqI-ciWOToqb0HhqhnQYfqqDuD_t_f28C0bkLSOLV4etT1WygTWpMGyexRa-StHP7q1r2ZvK78ud-_Mef94uCrBL39uueQbVWOyucpmZDSMmwvZbjF6cNeh6RWxRd8HPWgQxs74tiLrRXGSbn-K1Od23SE6DY8IJH.9eIw3Bl2vJVp0_gD_di9eA""",
    }

    chatbot = Chatbot(config, conversation_id=None)

    if output == "summary":
        prompt = "Can you list some of the takeaways from this text please? Either in a few paragraphs (less than 500 words), or bullet points. Also, please don't include anything about sponsors. Try not to be biased; if there are opposing views/conclusions, try to include details from both. Here is the text: "
    else:
        prompt = "Please try to determine the conclusion of this text. In your response, include the question that the conclusion is addressing: "

    summary = chatbot.get_chat_response(prompt + captions, output="text")
    return summary['message']


def remove_text_in_parenthesis(s: str) -> str:
    # Use a regex to match text within parenthesis and square brackets
    # and replace them with an empty string
    s = re.sub(r'[\[\(][^\]\)]*[\]\)]', '', s)
    # Replace multiple spaces with a single space
    s = re.sub(' +', ' ', s)
    # Return the modified string
    return s


def check_file_exists(directory, file_extension):
    # Check if any file in the given directory has the given file extension
    files = os.listdir(directory)
    return any(file.endswith(file_extension) for file in files)

def main():
    # URL of the YouTube video.
    # If a URL was provided as a command line argument, use that.
    # Otherwise, default to a Marques Brownlee link.
    if len(sys.argv) > 1:
        video_url = sys.argv[1]
    else:
        video_url = "https://www.youtube.com/watch?v=0gNauGdOkro"

    # Try to download curated subtitles. If it doesn't work, fallback to autogenerated
    with yt_dlp.YoutubeDL({
        'writeautomaticsub': False,
        'writesubtitles': True,
        'subtitleslangs': ['en'],
        'skip_download': True
    }) as ydl:
        ydl.download([video_url])

    if not check_file_exists(os.getcwd(), ".vtt"):
        with yt_dlp.YoutubeDL({
            'writeautomaticsub': True,
            'writesubtitles': False,
            'subtitleslangs': ['en'],
            'skip_download': True
        }) as ydl:
            ydl.download([video_url])

    # Print the names of all files with the '.vtt' extension
    captions = []
    files = os.listdir(os.getcwd())
    for file in files:
        if file.endswith('.vtt'):
            for line in webvtt.read(file):
                text = line.text.strip()
                captions.append(remove_text_in_parenthesis(text))

            # Get the unique captions
            captions = set(captions)

            # Encode the Unicode strings using the utf-8 codec and handle any exceptions
            captions = [c.encode("utf-8", "replace").decode() for c in captions]

            print(get_summary("\n".join(captions)))

            os.remove(file)

if __name__ == "__main__":
    main()
